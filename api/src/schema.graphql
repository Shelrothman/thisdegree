type Query {
    info: String!
    movies: [Movie]! # gets all movies
    movie(id: String!): Movie! # gets a movie by id that exists in db
    getCastList(title: String!): [Actor]! # ? gets the cast list of a movie by title through the wiki api
}
# // add to generate the id automatically
type Mutation {
    addMovie(title: String!): Movie!
    addActor(name: String!): Actor!
    # create an addCast that takes in a String of actors and their associated id and adds them to the castList
    # addCast(castList: String!): [Actor]! # string version of array that we can parse within the resolver and do createMany
    addMovieAndCast(title: String!): Movie! # add cast from the movie title
}

type Movie {
    id: ID!
    title: String!
    # castList: [Actor]
    castList: String! # for now, just a string of actor objects bc sqlite doesn't support arrays :(
}

type Actor {
    id: ID!
    name: String!
}